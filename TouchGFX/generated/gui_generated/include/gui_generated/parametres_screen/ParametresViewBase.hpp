/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef PARAMETRESVIEWBASE_HPP
#define PARAMETRESVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/parametres_screen/ParametresPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/containers/ScrollableContainer.hpp>
#include <touchgfx/containers/ListLayout.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class ParametresViewBase : public touchgfx::View<ParametresPresenter>
{
public:
    ParametresViewBase();
    virtual ~ParametresViewBase() {}
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image Home_Background;
    touchgfx::Button Retour;
    touchgfx::ScrollableContainer WifiAPList;
    touchgfx::ListLayout listWifi;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > > Rafraichir;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<ParametresViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<ParametresViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // PARAMETRESVIEWBASE_HPP
