/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/parametres_screen/ParametresViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

ParametresViewBase::ParametresViewBase() :
    buttonCallback(this, &ParametresViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &ParametresViewBase::flexButtonCallbackHandler)
{

    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    Home_Background.setXY(0, 0);
    Home_Background.setBitmap(touchgfx::Bitmap(BITMAP_HOME_BACKGROUND_ID));

    Retour.setXY(11, 277);
    Retour.setBitmaps(touchgfx::Bitmap(BITMAP_BACK_BUTTON_ID), touchgfx::Bitmap(BITMAP_BACK_BUTTON_ID));
    Retour.setAction(buttonCallback);

    WifiAPList.setPosition(22, 35, 269, 225);
    WifiAPList.setScrollbarsColor(touchgfx::Color::getColorFromRGB(54, 56, 56));

    listWifi.setDirection(touchgfx::SOUTH);
    listWifi.setPosition(0, 0, 250, 250);
    WifiAPList.add(listWifi);
    WifiAPList.setScrollbarsPermanentlyVisible();

    Rafraichir.setBoxWithBorderPosition(0, 0, 108, 34);
    Rafraichir.setBorderSize(0);
    Rafraichir.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(102, 103, 103), touchgfx::Color::getColorFromRGB(122, 133, 133), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
    Rafraichir.setText(TypedText(T_SINGLEUSEID17));
    Rafraichir.setTextPosition(0, 8, 108, 34);
    Rafraichir.setTextColors(touchgfx::Color::getColorFromRGB(246, 246, 246), touchgfx::Color::getColorFromRGB(10, 0, 0));
    Rafraichir.setPosition(122, 277, 108, 34);
    Rafraichir.setAction(flexButtonCallback);

    add(__background);
    add(Home_Background);
    add(Retour);
    add(WifiAPList);
    add(Rafraichir);
}

void ParametresViewBase::setupScreen()
{

}

void ParametresViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Retour)
    {
        //BackToHome
        //When Retour clicked change screen to Home
        //Go to Home with screen transition towards West
        application().gotoHomeScreenSlideTransitionWest();
    }
}

void ParametresViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &Rafraichir)
    {
        //Rafraichir
        //When Rafraichir clicked change screen to Parametres
        //Go to Parametres with no screen transition
        application().gotoParametresScreenNoTransition();
    }
}
